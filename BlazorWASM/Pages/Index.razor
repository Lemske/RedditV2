@page "/"
@using global::Shared.DTOs
@using HttpClients.ServiceInterfaces
@inject IPostService PostService
@inject NavigationManager NavMgr

<PageTitle>Posts</PageTitle>
<h1>All Posts</h1>

@* ReSharper disable once ConditionIsAlwaysTrueOrFalseAccordingToNullableAPIContract *@
@if(_postOverviewDTOs != null)
{
    <AuthorizeView>
        <NotAuthorized>
            @foreach (var postOverview in _postOverviewDTOs)
            {
                <div class="card">
                    <h4>@postOverview.Username</h4>
                    <h2>@postOverview.Title</h2>
                </div>
            }
        </NotAuthorized>
        <Authorized>
            @foreach (var postOverview in _postOverviewDTOs)
            {
                <div class="card" @onclick="@(()=>GoToPost(postOverview.Id))">
                    <h4>@postOverview.Username</h4>
                    <h2>@postOverview.Title</h2>
                </div>
            }
        </Authorized>
    </AuthorizeView>
}

@code
{
    // ReSharper disable once InconsistentNaming
    private IEnumerable<PostOverviewDTO> _postOverviewDTOs = null!;

    protected override async Task OnInitializedAsync()
    {
        _postOverviewDTOs = await PostService.GetAsync(new SearchPostOverviewParametersDTO(null, null));
    }

    private void GoToPost(int postId)
    {
        NavMgr.NavigateTo($"/Post/{postId}");
    }
}
